package com.example.demobcknd.controllers;

import com.example.demobcknd.models.user;
import com.example.demobcknd.services.userService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller // This means that this class is a Controller
@RequestMapping(path = "/user") // This means URL's start with /demo (after Application path)
public class userController {
	@Autowired // This means to get the bean called userRepository
				// Which is auto-generated by Spring, we will use it to handle the data

	userService userS = new userService();

	// //http://localhost:8000/user/add?name="abc"&email="12340@git.com"
	@GetMapping(path = "/add") // Map ONLY GET Requests
	public @ResponseBody String addNewUser(@RequestParam String name, @RequestParam String email) {
		// // @ResponseBody means the returned String is the response, not a view name
		// // @RequestParam means it is a parameter from the GET or POST request

		return userS.addUser(name, email);

	}

	@GetMapping(path = "/all")
	public @ResponseBody Iterable<user> getAllUsers() {
		return userS.findAllUsers();
	}

	@RequestMapping("{id}")
	public @ResponseBody user getUserID(@PathVariable("id") int id) {
		return userS.findUser(id);

	}

	@RequestMapping("/delete/{id}")
	public @ResponseBody String deleteUserID(@PathVariable("id") int id) {

		return userS.deleteUser(id);
	}

	@RequestMapping("/update/{id}")
	public @ResponseBody String updateUser(@PathVariable("id") int id, @RequestParam String name,
			@RequestParam String email) {
		return userS.updateUser(id, email, name);
	}

}
